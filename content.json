{"pages":[{"title":"","text":"由于篇幅短小和时间仓促, 若你发现了错误请告知我。希望我没有误导你，而是带你看了小小的新世界。如果您阅读后有所收获或对您有帮助; 不妨打赏我一下，请我喝杯茶或咖啡! 您小小的支持都是对作者莫大的鼓励！","link":"/about/index.html"},{"title":"categories","text":"","link":"/categories/index.html"},{"title":"标签","text":"","link":"/tags/index.html"}],"posts":[{"title":"Deepin中安装配置ChromeDriver","text":"Deepin中安装配置ChromeDriver查看当前的Chrome版本信息在谷歌浏览器地址栏中输入chrome://version/可以查看当前的Chrome信息： 1234567891011Google Chrome： 62.0.3202.62 (正式版本) （64 位）修订版本： 9da914b118cb0d10d715ccc4ad20575a0305a304-refs/branch-heads/3202@{#700}操作系统： LinuxJavaScript： V8 6.2.414.32Flash： 29.0.0.113 /home/wenbin/.config/google-chrome/PepperFlash/29.0.0.113/libpepflashplayer.so用户代理： Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.62 Safari/537.36命令行： /usr/bin/google-chrome-stable --flag-switches-begin --flag-switches-end可执行文件路径： /opt/google/chrome/google-chrome个人资料路径： /home/wenbin/.config/google-chrome/Default其他变体： c134752e-b8b72c88 .............. chromedriver版本 支持的Chrome版本 v2.34 v61-63 v2.33 v60-62 v2.32 v59-61 v2.31 v58-60 v2.30 v58-60 v2.29 v56-58 v2.28 v55-57 v2.27 v54-56 v2.26 v53-55 v2.25 v53-55 v2.24 v52-54 v2.23 v51-53 v2.22 v49-52 v2.21 v46-50 v2.20 v43-48 v2.19 v43-47 v2.18 v43-46 v2.17 v42-43 v2.13 v42-45 v2.15 v40-43 v2.14 v39-42 v2.13 v38-41 v2.12 v36-40 v2.11 v36-40 v2.10 v33-36 v2.9 v31-34 v2.8 v30-33 v2.7 v30-33 v2.6 v29-32 v2.5 v29-32 v2.4 v29-32 下载对应的Chromedriver版本下载地址： 1http://npm.taobao.org/mirrors/chromedriver/ 配置将下载来的ChromeDriver解压，得到一个ChromeDriver文件我们只需要将ChromeDriver文件放到/uer/bin/路径下 1sudo cp chromedriver /usr/bin/ 测试安装是否成功编写py文件写入以下代码： 1234from selenium import webdriverdriver = webdriver.Chrome()driver.get(&quot;https://www.baidu.com&quot;) 运行之后，如果能过弹出Chrome页面，就说明安装成功：","link":"/2019/07/22/Deepin中安装配置ChromeDriver/"},{"title":"Python解释器的安装与配置","text":"下载python解释器 如下图所示，在浏览器中打开python官方网站：https://www.python.org/ 点击Downloads进入下载页面 如下图所示： 注：关于Python解释器版本的选择补充说明 附官方文档截图说明： 下载完成后选择软件包安装路径 注：路径最好不要出现中文 因为我的电脑只有一个C盘，所以为了方便管理安装的软件，我创建了一个software文件夹，然后再在software文件夹里创建对应安装包的安装文件夹 如下图：C:\\software\\python3.7 进行安装 ​ 出现如下安装界面 ​ ​ 添加python解释器的环境变量 ​ 这里我们可以选择安装到自己指定的安装目录 ​ ​ 点击进入指定目录安装，勾选的选项默认就好，不需修改 ​ 勾选的选项默认就好，不需修改 ​ 点击Browse修改Python解释器的默认安装路径 ​ 修改后的安装路径显示 ​ 点击Install进行安装 ​ ​ ​ ​ 如图所示即安装成功 ​ 测试是否安装成功 按下 win+R 组合键打开windows系统的命令终端 ​ 命令终端如下图所示 ​ 至此Python解释器即安装成功啦由于篇幅短小和时间仓促,若你发现了错误请告知我。 希望我没有误导你，而是带你看了小小的新世界。","link":"/2019/07/15/Python解释器的安装与配置/"},{"title":"Ubuntu安装chrome浏览器和chromedriver","text":"安装chrome步骤 一. 下载chrome安装包 使⽤ubuntu上的⽕狐浏览器打开如下地址：http://www.google.cn/intl/zhCN/chrome/browser/desktop/index.html 选择安装版本，接受并安装a. 选择64bit.deb(适⽤于Deblan/Ubuntu) 点击接受并安装后，选择保存到本地a. ‘Save file’或者‘保存到本地’ 下载下来后，会保存在Dowdload⽂件中cd ~/Dowdload 切换到下载⽂件⽬录中ls 进⾏查看 二. 安装chrome浏览器 打开终端，切换到root⽤户，进⼊下载⽂件夹a. cd ~/Dowdloadb. sudo dpkg -i google-chrome-stable_current_amd64.deb 初次安装如果出现 Errors where encountered whileprocessing:google-chrome-stable 这个错误，就需要安装googlechrome-stablea. apt-get install google-chrome-stable 如果安装了google-chrome-stable后，还报错，错误信息为： Unmetdependencies. “Try apt-get -f install” with no packages (orspecify ….)a. 这个时候按照提示执⾏apt-get -f install 如果中间提示”是否继续安装” 输⼊ y v. 安装完毕后，重新执⾏第⼀步的命令 sudo dpkg -i google-chromestable_current_amd64.deb 如果此时没有报错就说明已经安装成功 三.安装chromedriver 通过百度，搜索“淘宝NPM” 寻找chromedriver下载地址，点击进⼊ 通过百度，搜索“chrome和chromedriver的对照表”，选择⾃⼰的合适的chromedriver 返回第⼀步打开的chromedriver版本⽹⻚，下载适合⾃⼰浏览器的chromedriver 下载之后，在下载⽂件夹中找到，点击右键，选择解压到当前⽬录 打开终端，将解压后的chromedriver执⾏程序，拷⻉到 /usr/bin ⽬录下cd~/Downloadsudo cp chromedriver /usr/bin 运⾏程序如果没有报错，说明选择的chromedriver的版本是正确的，如果还报错说明版本没有选对，删除下载⽂件夹中的chromedriver⽂件和 /usr/bin 中的chromedriver，重复上述步骤，选在适合⾃⼰浏览器的chromedriver下载安装","link":"/2019/07/22/Ubuntu安装chrome浏览器和chromedriver/"},{"title":"Windows系统安装配置Pycharm","text":"下载Pycharm 使用浏览器打开Pycharm官方网站：http://www.jetbrains.com/pycharm 选择对应的系统安装包，点击DOWNLOAD进行下载(文档以Windows系统举例) 选择Pycharm软件包的安装位置 安装Pycharm 运行Windows Denfender SmartScreen 更改Pycharm默认安装位置 选择自定义Pycharm安装位置 补充说明： 64-bit 表示跟64位操作系统相关(如下图所示) .py 表示关联后缀为.py的Python相关文件 等待安装完成 配置&amp;激活Pycharm 选择主题颜色 激活Pycharm的两种方式 1.选择免费试用30天(如下图所示) 2.破解激活 通过搜索引擎搜索：lanyus 修改Windows系统的hosts文件 hosts文件所在路径：C:\\Windows\\System32\\drivers\\etc 获得’注册码‘ 如此即代表安装安装配置成功 编写并运行你的第一个Python程序 修改程序的默认存放路径 修改完程序存放路径后，需要制定Python解释器 我的安装在C:\\software\\python3.7 找到 C:\\software\\python3.7 下的 python.exe 由于篇幅短小和时间仓促,若你发现了错误请告知我。 希望我没有误导你，而是带你看了小小的新世界。","link":"/2019/07/22/Windows系统安装配置Pycharm/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2019/07/14/hello-world/"},{"title":"ubuntu-安装Pycharm，简单粗暴的方法，三行命令行","text":"对于Ubuntu 16.10和Ubuntu 17.04，通过Ctrl + Alt + T打开终端，或通过从应用启动器搜索“terminal”，打开后，执行以下步骤： .通过命令添加PPA存储库：sudo add-apt-repository ppa:mystic-mirage/pycharm 2.如果您安装了以前的版本，请通过软件更新程序升级PyCharm。 运行命令来检查更新并安装IDE（社区版本）sudo apt updatesudo apt install pycharm-professional 或运行命令来检查更新并安装IDE（社区版本）：sudo apt updatesudo apt install pycharm 3.卸载PyCharm：要卸载PyCharm Python IDE，只需运行命令：专业版: sudo apt remove --autoremove pycharm pycharm-professional社区版: sudo apt remove --autoremove pycharm pycharm-community","link":"/2019/07/22/ubuntu-安装pycharm，简单粗暴的方法，三行命令行/"},{"title":"在Deepin系统下安装Anaconda","text":"在Deepin系统中安装Anaconda运行安装Anaconda1bash Anaconda3-4.3.1-Linux-x86_64.sh 安装具体步骤在执行上一步骤之后会出现以下： 123456Welcome to Anaconda3 5.0.1In order to continue the installation process, please review the licenseagreement.Please, press ENTER to continue&gt;&gt;&gt; 按ENTER继续，然后按ENTER读取许可证。读完许可证后，系统会提示您批准许可条款： 1Do you accept the license terms? [yes|no] 选择yes继续安装此时，系统将提示您选择安装的位置。您可以按ENTER接受默认位置，或指定其他位置以进行修改。在这里我选择了其它路径的安装，安装过程需要一些时间 123456789101112131415[/root/anaconda3] &gt;&gt;&gt; /home/wenbin/anaconda3PREFIX=/home/wenbin/anaconda3installing: python-3.6.3-hc9025b9_1 ...Python 3.6.3 :: Anaconda, Inc.installing: ca-certificates-2017.08.26-h1d4fec5_0 ...installing: conda-env-2.6.0-h36134e3_1 ...installing: intel-openmp-2018.0.0-h15fc484_7 ...installing: libgcc-ng-7.2.0-h7cc24e2_2 ...installing: libgfortran-ng-7.2.0-h9f7466a_2 ...installing: libstdcxx-ng-7.2.0-h7a57d05_2 ...installing: bzip2-1.0.6-h0376d23_1 ...installing: expat-2.2.4-hc00ebd1_1 ...installing: gmp-6.1.2-hb3b607b_0 .......................... 完成后，您将收到以下输出： 1234installation finished.Do you wish the installer to prepend the Anaconda3 install locationto PATH in your /root/.bashrc ? [yes|no][no] &gt;&gt;&gt; yes 键入yes ，以便可以使用conda命令。接下来将看到以下输出： 1234567Appending source /home/wenbin/anaconda3/bin/activate to /root/.bashrcA backup will be made to: /root/.bashrc-anaconda3.bakFor this change to become active, you have to open a new terminal.Thank you for installing Anaconda3! 如果你选择了no，那么你就需要手动的将Anaconda3添加的环境变量当中请打开文本编辑器并从主目录打开文件.bashrc或.bash_profile。添加该行。 1export PATH=&quot;/&lt;path to anaconda&gt;/bin:$PATH&quot; 注意：将&lt;path-to-anaconda&gt;替换为安装的anaconda文件的实际路径。保存文件。如果您打开任何终端窗口，请关闭它们，然后打开一个新窗口。您可能需要重新启动计算机才能使PATH更改生效。 为了激活安装，你应该来源~/.bashrc文件： 1source ~/.bashrc 之后你可以验证你的安装通过使用conda命令，例如与list ： 123456789wenbin@wenbin:~$ conda list# packages in environment at /home/wenbin/anaconda3:#_ipyw_jlab_nb_ext_conf 0.1.0 py36he11e457_0 alabaster 0.7.10 py36h306e16b_0 anaconda 5.0.1 py36hd30a520_1 anaconda-client 1.6.5 py36h19c0dcd_0 anaconda-navigator 1.6.9 py36h11ddaaa_0 .............. 设置Anaconda环境查看可用的Python解释器版本： 1conda search &quot;^python$&quot; 使用最新版本的Python 3创建一个环境。我们可以通过将版本3分配给python参数来实现。 我们将调用环境my_python ，但是您可能希望为您的环境使用更具描述性的名称，特别是如果您使用环境来访问多个版本的Python。 1conda create --name my_python python=3 通过一下命令来激活环境 1source activate my_python 通过一下命令添加其他包，比如requests 1conda install --name my_python requests","link":"/2019/07/22/在Deepin系统下安装Anaconda/"},{"title":"安装Ubuntu后要做的事","text":"Ubuntu 16.04安装完成后，还需要做一些配置才能愉快的使用，所以装完系统后还要进行一系列的优化。1.删除libreofficelibreoffice虽然是开源的，但是Java写出来的office执行效率实在不敢恭维，装完系统后果断删掉 sudo apt-get remove libreoffice-common 2.删除Amazon的链接sudo apt-get remove unity-webapps-common 3.删掉基本不用的自带软件（用的时候再装也来得及）123sudo apt-get remove thunderbird totem rhythmbox empathy brasero simple-scan gnome-mahjongg aisleriot gnome-mines cheese transmission-common gnome-orca webbrowser-app gnome-sudoku landscape-client-ui-installsudo apt-get remove onboard deja-dup 这样系统就基本上干净了。 4.安装Vim居然默认没有集成Vim神器，只能手动安装了。 sudo apt-get install vim 5.设置时间使用UTCsudo vim /etc/default/rcS 将UTC=no改为UTC=yes 6.安装Chrome通过直接下载安装Google Chrome浏览器deb包。 打开Ubuntu终端，以下为32位版本，使用下面的命令。 wget https://dl.google.com/linux/direct/google-chrome-stable_current_i386.deb 以下为64位版本，使用下面的命令。 wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb 下载好后 —————————— 32 位安装命令: sudo dpkg -i google-chrome-stable_current_i386.deb 64 位安装命令: sudo dpkg -i google-chrome-stable_current_amd64.deb —————————— 添加 Google Chrome 的PPA 安装Google Chrome浏览器官方PPA，打开终端然后运行下面的命令，下载签名密钥： wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add 然后 12345sudo sh -c &apos;echo &quot;deb http://dl.google.com/linux/chrome/deb/ stable main&quot; &gt;&gt; /etc/apt/sources.list.d/google-chrome.list&apos;sudo apt-get updatesudo apt-get install google-chrome ———————————————— 安装Google Chrome unstable 版本： sudo apt-get install google-chrome-beta ———————————————— 安装Google Chrome beta 版本： sudo apt-get install google-chrome-unstable 7.安装搜狗输入法123456789vim /etc/apt/sources.list.d/ubuntukylin.list文件，加入ubuntu kylin的apt源deb http://archive.ubuntukylin.com:10006/ubuntukylin trusty main然后sudo apt-get updatesudo apt-get install sogoupinyin 这样就可以apt安装和更新搜狗输入法了。 其实Ubuntu16.04自带的中文输入法挺好用的，特别对于需要经常输入拉丁字符、希腊字符的朋友。不过由于用户习惯，Sougou拼音还是需要安装的 8.安装WPS OfficeMS一直未出Linux版的Office，只能凑合着用WPS了 sudo apt-get install wps-office 9.安装Oracle Java12345sudo add-apt-repository ppa:webupd8team/javasudo apt-get updatesudo apt-get install oracle-java8-installer 由于系统自带的是OpenJDK，卸载OpenJDK之后会带有残留，导致运行 java -version 时第一行不是java的版本号，会是Picked up JAVA_TOOL_OPTIONS: -javaagent:/usr/share/java/jayatanaag.jar这个提示，导致很多检测java版本号的脚本会运行出错，因此需要手动清除残留。 sudo rm /usr/share/upstart/sessions/jayatana.conf 删除/usr/share/upstart/sessions/jayatana.conf文件，重启之后再运行java -version就不会再有Picked up JAVA_TOOL_OPTIONS: -javaagent:/usr/share/java/jayatanaag.jar提示了。 10.安装Sublime Text 312345sudo add-apt-repository ppa:webupd8team/sublime-text-3sudo apt-get updatesudo apt-get install sublime-text 11.安装经典菜单指示器12345sudo add-apt-repository ppa:diesch/testingsudo apt-get updatesudo apt-get install classicmenu-indicator 12.安装系统指示器SysPeek12345sudo add-apt-repository ppa:nilarimogard/webupd8sudo apt-get updatesudo apt-get install syspeek 13.自定义DHCP网络的DNS Server IP地址12345sudo vim /etc/dhcp/dhclient.conf文件，在第21行#prepend domain-name-servers 127.0.0.1;下一行添加如下2行使用aliyun和114的DNSprepend domain-name-servers 114.114.114.114;prepend domain-name-servers 223.5.5.5; 这样可以优先使用aliyun的dns，次要使用114的DNS。 14.安装git和vpncgit和vpn大家都懂的，程序员的好工具。 sudo apt-get install vpnc git 15.安装axelaxel是Linux命令行界面的多线程下载工具，比wget的好处就是可以指定多个线程同时在命令行终端里下载文件。 sudo apt-get install axel 安装之后，就可以代替wget用多线程下载了。 16.安装openssh-serversudo apt-get install openssh-server 安装之后，就可以在Win下用ssh工具远程登陆了，当然也多了一个安全隐患，如果不想远程登陆本机的话，可以不装openssh-server。 17.安装CMake和Qt CreatorCMake和Qt Creator是Linux下开发C++程序的神器，Ubuntu 17.10已经集成了最新版的Qt Creator （4.4.1）。 sudo apt-get install cmake qtcreator 18.安装ExFat文件系统驱动Ubuntu默认不支持exFat文件系统的挂载，需要手动安装exfat的支持 sudo apt-get install exfat-fuse 装上exfat-fuse之后就可以挂载exfat分区的磁盘了。 19.安装lnavlnav工具是在终端界面看日志的神器 sudo apt-get install lnav 装上之后在终端里就可以用lnav彩色显示日志了。 20.安装unrar系统默认不带解压缩rar文件的功能，手动安装unrar程序 sudo apt-get install unrar 装上之后就可以用命令解压缩rar文件了。 使用如下命令解压缩文件到当前目录。 unrar x test.rar","link":"/2019/07/22/安装Ubuntu后要做的事/"},{"title":"安装谷歌拼音","text":"linux下面的中文输入法一直不给力，Ubuntu里正常使用的搜狗输入法经常突然无法输出中文（具体现象是，可以呼出搜狗输入法界面，但是候选词列表无显示）虽然用惯了搜狗输入法但是实在忍不了啦，于是痛定思痛果断换掉。 现在,google拼音输入法可以用了！ 这得感谢下面这个项目： libgooglepinyin ( A fork from google pinyin on android) 项目地址：http://code.google.com/p/libgooglepinyin/ 安装之后记录了下来，希望能为同样遇到输入法问题的人提供参考 一、1sudo apt-get install fcitx-googlepinyin 二、 在settings-&gt;Language Support里将keyboard input method system设置为fcitx 三 、注销系统，再登录 在settings-&gt;Text Entry里，添加输入源，搜索google-pinyin添加即可。","link":"/2019/07/22/安装谷歌拼音/"},{"title":"种一棵树最好的时间是十年前其次是现在","text":"“随着年龄的增长，你会失去很多东西，你的爱人，你的工作，你的头发，你的视力。 但当你开始学习新东西的时候，不管是编程还是弹钢琴，这些都是一种加分，是一种激励” ——若宫雅子，82岁程序员。","link":"/2019/07/14/种一棵树最好的时间是十年前其次是现在/"},{"title":"Ubuntu MongoDB数据库的安装和使用","text":"本博文介绍了MongoDB，并详细指引读者在Ubuntu下MongoDB的安装和使用。本教程在Ubuntu14.04下测试通过。 一、MongoDB介绍MongoDB 是一个是一个基于分布式文件存储的数据库，介于关系数据库和非关系数据库之间，是非关系数据库当中功能最丰富，最像关系数据库的。他支持的数据结构非常松散，是类似json的bson格式，因此可以存储比较复杂的数据类型。Mongo最大的特点是他支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。 二、安装MongoDBMongoDB安装很简单，无需下载源文件，可以直接用apt-get命令进行安装。打开终端，输入以下命令： 1sudo apt-get install mongodb 1.安装完成后，在终端输入以下命令查看MongoDB版本： 1mongo -version 输出版本信息，表明安装成功，截图如下： 2.启动和关闭mongodb命令如下： 12service mongodb startservice mongodb stop 截图如下： 3.默认设置MongoDB是随Ubuntu启动自动启动的。输入以下命令查看是否启动成功： 1pgrep mongo -l #注意：-l是英文字母l，不是阿拉伯数字1 截图如下：卸载MongoDB 1sudo apt-get --purge remove mongodb mongodb-clients mongodb-server 三、使用MongoDBshell命令模式输入mongo进入shell命令模式，默认连接的数据库是test数据库，在此之前一定要确保你已经启动了MongoDB，否则会出现错误，启动之后运行成功，如下截图：常用操作命令：数据库相关 123456show dbs:显示数据库列表 show collections：显示当前数据库中的集合（类似关系数据库中的表table） show users：显示所有用户 use yourDB：切换当前数据库至yourDB db.help() ：显示数据库操作命令 db.yourCollection.help() ：显示集合操作命令，yourCollection是集合名 MongoDB没有创建数据库的命令，如果你想创建一个“School”的数据库，先运行use School命令，之后做一些操作（如：创建聚集集合db.createCollection(‘teacher’)）,这样就可以创建一个名叫“School”的数据库。截图如下： 下面以一个School数据库为例，在School数据库中创建两个集合teacher和student，并对student集合中的数据进行增删改查基本操作（集合Collection相当于关系型数据库中的表table）。1、切换到School数据库 1use School #切换到School数据库。MongoDB 无需预创建School数据库，在使用时会自动创建 2、创建Collection 1db.createCollection(&apos;teacher&apos;) #创建一个聚集集合。MongoDB 其实在插入数据的时候，也会自动创建对应的集合，无需预定义集合 截图如下：3、插入数据与数据库创建类似，插入数据时也会自动创建集合。插入数据有两种方式：insert和save。 12db.student.insert({_id:1, sname: &apos;zhangsan&apos;, sage: 20}) #_id可选db.student.save({_id:1, sname: &apos;zhangsan&apos;, sage: 22}) #_id可选 这两种方式，其插入的数据中_id字段均可不写，会自动生成一个唯一的_id来标识本条数据。而insert和save不同之处在于：在手动插入_id字段时，如果_id已经存在，insert不做操作，save做更新操作；如果不加_id字段，两者作用相同都是插入数据。截图如下： 添加的数据其结构是松散的，只要是bson格式均可，列属性均不固定，根据添加的数据为准。先定义数据再插入，就可以一次性插入多条数据，截图如下：运行完以上例子，student 已自动创建，这也说明 MongoDB 不需要预先定义 collection ，在第一次插入数据后，collection 会自动的创建。截图如下： 4、查找数据 1db.youCollection.find(criteria, filterDisplay) criteria ：查询条件，可选filterDisplay：筛选显示部分数据，如显示指定列数据，可选（当选择时，第一个参数不可省略，若查询条件为空，可用{}做占位符，如下例第三句） 12345db.student.find() #查询所有记录。相当于：select * from studentdb.student.find({sname: &apos;lisi&apos;}) #查询sname=&apos;lisi&apos;的记录。相当于： select * from student where sname=&apos;lisi&apos;db.student.find({},{sname:1, sage:1}) #查询指定列sname、sage数据。相当于：select sname,sage from student。sname:1表示返回sname列，默认_id字段也是返回的，可以添加_id:0（意为不返回_id）写成{sname: 1, sage: 1,_id:0}，就不会返回默认的_id字段了db.student.find({sname: &apos;zhangsan&apos;, sage: 22}) #and 与条件查询。相当于：select * from student where sname = &apos;zhangsan&apos; and sage = 22db.student.find({$or: [{sage: 22}, {sage: 25}]}) #or 条件查询。相当于：select * from student where sage = 22 or sage = 25 查询操作类似，这里只给出db.student.find({sname: ‘lisi’})查询的截图，如下： 5、修改数据 123456db.youCollection.update(criteria, objNew, upsert, multi ) criteria: update的查询条件，类似sql update查询内where后面的 objNew : update的对象和一些更新的操作符（如$set）等，也可以理解为sql update查询内set后面的。 upsert : 如果不存在update的记录，是否插入objNew，true为插入，默认是false，不插入。 multi: mongodb默认是false,只更新找到的第一条记录，如果这个参数为true,就把按条件查出来多条记录全部更新。默认false，只修改匹配到的第一条数据。 其中criteria和objNew是必选参数，upsert和multi可选参数 举例如下： 1db.student.update({sname: &apos;lisi&apos;}, {$set: {sage: 30}}, false, true) #相当于：update student set sage =30 where sname = &apos;lisi&apos;; 操作截图如下：6、删除数据 1db.student.remove({sname: &apos;chenliu&apos;}) #相当于：delete from student where sname=&apos;chenliu&apos; 操作截图如下： 7、退出shell命令模式输入exit或者Ctrl+C退出shell命令模式 参考MongoDB官方文档： 1https://docs.mongodb.com/master/tutorial/install-mongodb-on-ubuntu/?_ga=2.38644067.1704633038.1522762185-1747967431.1522762185","link":"/2019/07/22/Ubuntu安装MongoDB和使用/"},{"title":"Vmware虚拟机安装和配置Ubuntu系统","text":"创建带有 SCSI 控制器类型、虚拟机磁盘类型以及与旧版 VMware 产品兼容性等高级选项的虚拟机 安装前准备： 安装好VMwareWorkstation Ubuntu16.04镜像文件 （下载地址链接：https://pan.baidu.com/s/1MSBBv9NOh7_cFgTMUQPEhQ 提取码：w6g7 ） Ubuntu18.04镜像文件 （下载地址链接：链接：https://pan.baidu.com/s/1uhPj0ttM9M7QxpR3Z4LI5g 提取码：il08 ） 一、Ubuntu的初步安装 创建新的虚拟机 点击下一步，如下图所示 选择兼容性版本 注意修改的信息 修改处理器配置信息，如下图所示 虚拟机内存配置，最低要求2GB,可以根据自己的需求修改，后期也可以再更改 此时，切记千万不要手快点开电源！！！ 二、Ubuntu系统安装设置 设置加载镜像 这些完成后就可以直接开启虚拟机了 拖动窗口，点 continue 继续下一步 设置自己的用户名和密码 : 安装进行中，等待安装 点击 Restart Now 进行重启， 如果出现如下图所示的状况，导致无法进入系统界面，需要点击Vmware的重新启动客户机按钮进行重新启动 如下图所示： 如果出现如下情况，切记千万不要选择更新 在安装好的Ubuntu系统中鼠标右键选择 Open Terminal，打开Ubuntu系统的命令终端 然后，修改hosts文件 etc目录下的hosts文件 使用vim修改编辑hosts文件sudo vi /etc/hosts 使用gedit修改编辑hosts文件sudo gedit /etc/hosts 如此，即代表系统安装成功 三、安装Vmware Tools 为了让系统能像下图一样适应客户机，需要安装Vmware Tools 在安装好的Ubuntu系统中鼠标右键选择 Open Terminal，打开Ubuntu系统的命令终端 获取管理员权限 输入以下命令，来获取管理员权限，密码是你在上面设置的密码：sudo passwd 前面我设置的密码是chuanzhi 如果上面你设置的密码不是chuanzhi,请输入你自己设置的密码 切换到 root 最高权限用户 安装Vmware tools工具 选择Vmware顶部工具栏里的 安装Vmware Tools（T）选项 在安装好的Ubuntu系统中鼠标右键选择 Open Terminal，打开Ubuntu系统的命令终端 打开终端后，进行下面设置 复制CD中的 VMwareTools-10.0.10-4301679.tar.gz 文件到根目录下： cp /media/user/VMware\\ Tools/VMwareTools-10.0.10-4301679.tar.gz / 然到移动到根目录： cd / 解压 VMwareTools-10.0.10-4301679.tar.gz： tar -zxvf VMwareTools-10.0.10-4301679.tar.gz 按下回车，执行解压 如下如所示 解压完成后进入解压文件夹vmware-tools-distrib cd vmware-tools-distrib 运行安装程序： ./vmware-install.pl 一路 y 加 回车 如下图所示 四、设置共享文件夹 设置共享文件夹，可以实现Windows系统和Ubuntu系统的复制粘贴功能 在菜单栏找到虚拟机-&gt;设置，添加自己的共享文件夹 如此，即完成了Ubuntu系统的初步设置 五、修改Ubuntu系统的更新源 更改apt源为国内源方法早就有了，内容大同小异，我们应当掌握其规律了，其实每一版内容不同的地方就是版本号（或者官方一点的说：系统代号），所以我们先了解下新版本的系统代号：使用命令：lsb_release -c得到本系统的系统代号，如下图所示：同样的我们也可以得到之前任意版本的系统代号：Ubuntu 12.04 (LTS)代号为precise。Ubuntu 14.04 (LTS)代号为trusty。Ubuntu 15.04 代号为vivid。Ubuntu 15.10 代号为wily。Ubuntu 16.04 (LTS)代号为xenial。所以这也就解释了为什么利用搜索引擎搜出来的那么多方案里面内容不尽相同的原因，因为大家更改apt安装源时用的系统不一样。 *查看系统版本代号 *lsb_release -a 注意：一定要对准自己的Ubuntu系统版本代号，检查是Ubuntu16.04还是Ubuntu18.04 下面分别提供Ubuntu16.04和ubuntu 18.04两个不同系统版本的阿里源 Ubuntu16.04对应阿里源 123456789101112131415161718# deb cdrom:[Ubuntu 16.04 LTS _Xenial Xerus_ - Release amd64 (20160420.1)]/ xenial main restricteddeb-src http://archive.ubuntu.com/ubuntu xenial main restricted #Added by software-propertiesdeb http://mirrors.aliyun.com/ubuntu/ xenial main restricteddeb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted multiverse universe #Added by software-propertiesdeb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricteddeb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted multiverse universe #Added by software-propertiesdeb http://mirrors.aliyun.com/ubuntu/ xenial universedeb http://mirrors.aliyun.com/ubuntu/ xenial-updates universedeb http://mirrors.aliyun.com/ubuntu/ xenial multiversedeb http://mirrors.aliyun.com/ubuntu/ xenial-updates multiversedeb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse #Added by software-propertiesdeb http://archive.canonical.com/ubuntu xenial partnerdeb-src http://archive.canonical.com/ubuntu xenial partnerdeb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricteddeb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted multiverse universe #Added by software-propertiesdeb http://mirrors.aliyun.com/ubuntu/ xenial-security universedeb http://mirrors.aliyun.com/ubuntu/ xenial-security multiverse Ubuntu18.04对应阿里源 如果是Ubuntu18.04系统可以参照我的简书配置：https://www.jianshu.com/p/e5677ebd5341 12345678910deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse 修改系统更新源方法步骤如下： 首先备份Ubuntu系统的官方源文件 打开Ubuntu的命令终端，进入源文件 sources.list 所在的目录： 然后执行备份命令，执行 sudo cp sources.list sources.list.backup 对源文件内容进行备份，以防万一。 12cd /etc/aptsudo cp sources.list sources.list.backup 修改源文件内容 将上述对应系统版本的阿里源的文件内容全部复制，使用 sudo vim sources.list 打开文件，输入 ggdG（vim操作指令）删除所有内容（这句指令可以理解为删除第一行到最后一行的的全部内容） 12sudo vim sources.list # 在 /etc/apt 目录下ggdG # 使用vim打开 sources.list 文件后执行此命令 将复制的阿里源文件内容全部粘贴到文件中后，输入 : 然后再输入wq 保存退出。 值得注意的是 sources.list 文件的条目都是有格式的（通过上面的内容大家也看的出来），一般有如下形式： 12deb http://site.example.com/debian distribution component1 component2 component3deb-src http://site.example.com/debian distribution component1 component2 component3 所以后面几个参数是对软件包的分类（Ubuntu下是main， restricted，universe ，multiverse这四个）所以你把内容写成: 1234deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricteddeb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed universe multiverse 上面之类的也是可以的，之前我有这个疑惑，所以在这里一并告知和我有一样疑惑的朋友。 更新源 使用 sudo apt-get update 即可更新获取阿里软件源 提供的软件列表 1sudo apt-get update 更新软件 使用 sudo apt-get upgrade 即可跟新软件 1sudo apt-get upgrade 如下图所示，即代表更新成功 六、安装VIM编辑器 在Ubuntu系统的命令终端输入 sudo apt-get install vim 进行下载 检测是否安装成功 在命令终端输入 vim 回车 如上图所示，即代表安装成功 退出 vim 1.按下 ESC 键 2.再输入 ： 3.最后输入 q 或 wq 即可 4.回车 安装完成后的 vim 是默认不显示行号的 上图中在 /etc/vim/ 目录下打开的 输入 sudo vi vimrc后是不显示行号的，如下图所示 进入编辑界面后，按下 G 键（这是大写的 G）直接跳转到文件的最后一行 再次按下 i 键，进行编辑，输入 set number 如下图所示 退出 vim 1.按下 ESC 键 2.再输入 ： 3.最后输入 q 或 wq 即可 4.回车 检查设置行号是否生效 如此，即代表安装好修改配置成功 七、安装谷歌浏览器 先下载谷歌浏览器的deb安装包 下载地址如下： https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb 等待下载完成 安装谷歌浏览器需执行以下两步，回到终端输入以下命令 sudo apt install libappindicator1 libindicator7 关闭终端，打开下载的存放deb包的文件夹，空白处右键在这里打开终端 输入以下命令 sudo dpkg -i google-chrome-stable_current_amd64.deb 最后在终端中输入以下命令，修复依赖关系 sudo apt -f install 至此谷歌浏览器就安装好了，现在把它设置在快速启动栏 最后将其移动到快速启动栏的合适位置，右键点击图标锁定到启动器，左键拖动选择合适位置！ 至此，谷歌浏览器即安装成功 八、安装Pycharm 下载地址：https://www.jetbrains.com/pycharm/download/#section=linux 右键安装包，点击“Extract Here”意思是提取到这里，相当于解压 提取完成后，会生成一个 pycharm-2019.1.1 的文件夹，然后双击进入该文件夹 ，空白处右键在这里打开终端 选择主题 到这里，我选择秘钥激活的方法 百度：lanyus http://idea.lanyus.com/ 修改 hosts 文件（hosts文件在 /etc 目录下） 120.0.0.0 account.jetbrains.com0.0.0.0 www.jetbrains.com 将上面两行代码添加到，hosts文件中 添加后如下图所示 退出 vim 1.按下 ESC 键 2.再输入 ： 3.最后输入 q 或 wq 即可 4.回车 获取注册码后输入 指定Python3解释器（1） 指定Python3解释器（2） 可以通过在命令终端输入：whereis python找到系统的Python解释器路径 如此，Python3的解释器便指定完成 添加Pycharm桌面快捷方式 第一步 创建Pycharm.desktop文件并用gedit的打开 sudo gedit /usr/share/applications/Pycharm.desktop 然后就会弹出一个新框 第二步 粘贴下面的代码输入并保存 123456789[Desktop Entry]Type=ApplicationName=PycharmGenericName=Pycharm3Comment=Pycharm3:The Python IDEExec=sh /home/python/Downloads/pycharm-2019.1.1/bin/pycharm.shIcon=/home/python/Downloads/pycharm-2019.1.1/bin/pycharm.pngTerminal=pycharmCategories=Pycharm 注意一定要将Desktop Entry复制进去，也就是上面的全部都要复制进去 Exec 的路径是 pycharm.sh 的所在路径，即 pycharm 的启动文件 Icon 的路径是 pycharm.png 的所在路径，即 pycharm 的图标 我下载解压后的路径，如下图 路径：/home/python/Downloads/pycharm-2019.1.1/bin Exec 的路径是 pycharm.sh 的所在路径，即 pycharm 的启动文件 /home/python/Downloads/pycharm-2019.1.1/bin/pycharm.sh Icon 的路径是 pycharm.png 的所在路径，即 pycharm 的图标 /home/python/Downloads/pycharm-2019.1.1/bin/pycharm.png 创建的Pycharm.desktop文件如下 123456789[Desktop Entry]Type=ApplicationName=PycharmGenericName=Pycharm3Comment=Pycharm3:The Python IDEExec=sh /home/python/Downloads/pycharm-2019.1.1/bin/pycharm.shIcon=/home/python/Downloads/pycharm-2019.1.1/bin/pycharm.pngTerminal=pycharmCategories=Pycharm 修改完成后，即可发现Pycharm的快捷方式 如此，即表示配置成功 九、安装MySQL数据库 有两种安装方法，请将两种方法都阅读完后，再选择其中的一种方式进行安装 方法一 使用命令安装MySQL数据库 安装前先更新软件包列表： 12在终端执行如下命令：sudo apt-get update Vmware虚拟机安装和配置Ubuntu系统/ 在Ubuntu16.04上安装MySQL： 12在终端执行如下命令：sudo apt-get install mysql-server mysql-client 在安装过程中需要你输入MySQL管理员用户（root）密码，如下图 如上即代表安装完成 方法二 通过APT方式安装 说明：此种方式完全参考官方提供的教程:地址：https://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/ 注意：通过APT方式安装的版本都是现在最新的版本，现在我安装的是5.7.18。通过这种方式安装好之后开机自启动都已经配置好，和命令行上的环境变量，无需手动配置。 下载官方提供的mysql-apt-config.deb包进行APT源设置，下载地址：https://dev.mysql.com/downloads/repo/apt/ 找到下载的包路径 输入如下命令： sudo dpkg -i mysql-apt-config_0.8.12-1_all.deb 运行之后会出现如下界面： 一般只需要默认，按方向键选择OK回车即可。 完成后使用以下命令从MySQL APT存储库更新包信息（此步骤是必需的）： sudo apt-get update 说明：官方说通过这个工具这样操作之后，安装MySQL时就是按照上面选择的来进行。 安装 通过以下命令安装MySQL sudo apt-get install mysql-server 这将安装MySQL服务器的包，以及客户端和数据库公共文件的包。 此时如果提示依赖不足，如下所示： 如果没出现依赖问题，那么就不需要使用此命令。 ​ 那么需要运行下面命令解决依赖问题 ​ sudo apt-get install -f ​ 安装MySQL时会一并安装如下所示的软件： 完成后再次运行 sudo apt-get install mysql-server 如果没出现依赖问题，那么就不需要使用此命令。 在安装过程中，系统会要求您为MySQL安装的root用户提供密码,输入即可,如下所示： 重要 确保记住您设置的root密码。想要稍后设置密码的用户可以在对话框中将 密码字段留空，只需按确定即可 ; 在这种情况下，对于使用Unix套接字文件的连接，将通过Socket Peer-Credential Pluggable Authentication对服务器的root访问进行身份 验证。您可以稍后使用程序mysql_secure_installation设置root密码 。 我这里密码设置为：mysql (为了避免忘记密码，建议设置为:mysql) MySQL8.0采用了新的加密方式，一定要注意，正是因为这个加密方式才导致Ubuntu18.04用设置的root密码登录不了MySQL，因为Ubuntu18.04的终端可能有问题，并不支持这个新的加密方式。幸好有界面可以让我们选择使用旧版本5.x的加密方式，所以果断选择采用5.x的加密方式。 确认密码","link":"/2019/07/22/Vmware虚拟机安装和配置Ubuntu系统/"}],"tags":[{"name":"环境配置","slug":"环境配置","link":"/tags/环境配置/"},{"name":"Deepin","slug":"Deepin","link":"/tags/Deepin/"},{"name":"ChromeDriver","slug":"ChromeDriver","link":"/tags/ChromeDriver/"},{"name":"Python解释器的安装与配置","slug":"Python解释器的安装与配置","link":"/tags/Python解释器的安装与配置/"},{"name":"chromedriver","slug":"chromedriver","link":"/tags/chromedriver/"},{"name":"chrome","slug":"chrome","link":"/tags/chrome/"},{"name":"Pycharm","slug":"Pycharm","link":"/tags/Pycharm/"},{"name":"Anaconda","slug":"Anaconda","link":"/tags/Anaconda/"},{"name":"谷歌输入法","slug":"谷歌输入法","link":"/tags/谷歌输入法/"},{"name":"励志","slug":"励志","link":"/tags/励志/"},{"name":"MongoDB数据库","slug":"MongoDB数据库","link":"/tags/MongoDB数据库/"},{"name":"系统配置","slug":"系统配置","link":"/tags/系统配置/"},{"name":"Ubuntu","slug":"Ubuntu","link":"/tags/Ubuntu/"},{"name":"VMware","slug":"VMware","link":"/tags/VMware/"},{"name":"虚拟机","slug":"虚拟机","link":"/tags/虚拟机/"}],"categories":[{"name":"环境配置","slug":"环境配置","link":"/categories/环境配置/"}]}